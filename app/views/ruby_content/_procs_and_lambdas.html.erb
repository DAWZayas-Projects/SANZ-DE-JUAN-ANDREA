<% stylesheet_link_tag 'content' %>

<div class="main container" id="procedimientosylambdas">
  <h1 class="title">PROCEDIMIENTOS Y LAMBDAS</h1>
  <div class="subject">
    <div class="big-text">
      <p>
        Similares a los bloques, el uso de un proc o un lambda frente a un bloque es que estos se declaran y se almacenan en una variable y un bloque no. De esta forma, si queremos reutilizarlo en varios métodos o funciones no repetiremos código.
      </p>
      <p>
        Los procedimientos y los lambdas son iguales salvo dos características: 
      </p>
      <ul class="list-group uList">
        <li class="list-group-item">
          &nbsp;Los <b>lambdas</b> comprueban que el número de argumentos pasado sea correcto, lanzando una excepción si es incorrecto.
        </li>
        <li class="list-group-item">
          &nbsp;Los <b>lambdas</b> no salen de la ejecución al encontrar un return, si no que devuelven el valor al método y siguen ejecutándose.
        </li>
      </ul>
      <p>
        Procedimiento:
      </p>
      <pre class="codeBlock">
        <code data-lang="ruby">
          cube = <span class="new">Proc.new</span> <span class="special">{</span> |x| x ** 3 <span class="special">}</span>
        </code>
      </pre>
      <p>
        Lambda:
      </p>
      <pre class="codeBlock">
        <code data-lang="ruby">
          cube = <span class="new">lambda</span> <span class="special">{</span> |x| x ** 3 <span class="special">}</span>
        </code>
      </pre>
      <p>La llamada a cualquiera de los dos se realiza con .call:</p>
      <pre class="codeBlock">
        <code data-lang="ruby">
          cube<span class="base">.call</span>
        </code>
      </pre>
    </div>
  </div>
</div>
